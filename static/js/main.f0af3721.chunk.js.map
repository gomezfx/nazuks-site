{"version":3,"sources":["logo.svg","components/NavigationLink/NavigationLink.js","components/Logo/Logo.js","components/SplashImage/SplashImage.js","helpers.js","components/Story/Story.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","PosedNavigationLink","posed","div","hidden","opacity","y","visible","StyledNavigationLink","styled","a","_templateObject","Component","PosedLogo","textShadow","transform","transition","type","stiffness","StyledLogo","Logo_templateObject","TitleWrapper","_templateObject2","StyledTitle","_templateObject3","TitleStroke","_templateObject4","PerspectiveOuter","_templateObject5","_templateObject6","Logo","_templateObject7","props","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","react_default","createElement","tilt_default","className","options","scale","reset","PosedSplashImage","ImageWrapper","SplashImage_templateObject","AspectRatio","SplashImage_templateObject2","concat","src","HiddenImage","img","SplashImage_templateObject3","unsplashImg","users","Math","floor","random","length","getUnsplashImage","PosedStory","delay","duration","Story_templateObject","Story_templateObject2","Story_templateObject3","Image","Story_templateObject4","StoryWrapper","Story_templateObject5","Story","_this","state","revealed","setState","_this2","es","onEnter","reveal","pose","Story_ImageWrapper","PosedWrapper","delayChildren","staggerChildren","Scene1","App_templateObject","Container","App_templateObject2","App_templateObject3","Scene2","App_templateObject4","ColContainer","App_templateObject5","ColLeft","App_templateObject6","ColRight","App_templateObject7","App","loaded","components_Logo_Logo","components_Story_Story","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f0af3721.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport posed from 'react-pose';\n\nconst PosedNavigationLink = posed.div({\n  hidden: {\n    opacity: 0,\n    y: 20\n  },\n  visible: {\n    opacity: 1,\n    y: 0\n  }\n});\n\nconst StyledNavigationLink = styled.a`\n  color: black;\n  text-transform: uppercase;\n  font-size: 12px;\n  font-weight: 500;\n  font-family: 'Noto Sans JP', sans-serif;\n  margin-bottom: 20px;\n  display: inline-block;\n`;\n\nclass NavigationLink extends Component {\n  render() {\n    return (\n      <PosedNavigationLink><StyledNavigationLink>{this.props.children}</StyledNavigationLink></PosedNavigationLink>\n    );\n  }\n}\n\n\nexport default NavigationLink\n","import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport Tilt from 'react-tilt';\nimport posed from 'react-pose';\n\nconst PosedLogo = posed.div({\n  hidden: {\n    opacity: 0,\n    textShadow: '-0px 10px 0px rgba(1, 255, 112, 1), -0px 40px 0px rgba(1, 255, 112, 1), -0px 80px 0px rgba(1, 255, 112, 1)',\n    transform: 'translateY(25vh) rotateX(45deg)'\n  },\n  visible: {\n    opacity: 1,\n    textShadow: '0px 0px 0px rgba(1, 255, 112, 0), 0px 0px 0px rgba(1, 255, 112, 0), 0px 0px 0px rgba(1, 255, 112, 0)',\n    transition: { type: 'spring', stiffness: 80 },\n    transform: 'translateY(0vh) rotateX(0deg)'\n  }\n});\n\nconst StyledLogo = styled.div`\n  display: inline-block;\n  position: fixed;\n  left: 50%;\n  transform: translateX(-50%);\n  padding: 40px;\n  margin: 0 auto;\n  top: 0;\n  cursor: pointer;\n  z-index: 5;\n`;\n\nconst TitleWrapper = styled.div`\n  position: relative;\n  display: inline-block;\n`;\n\nconst StyledTitle = styled.a`\n  color: transparent;\n  font-weight: normal;\n  font-family: 'DrukWide';\n  font-size: 48px;\n  display: inline-block;\n  position: relative;\n  letter-spacing: 2px;\n`;\n\nconst TitleStroke = styled(StyledTitle)`\n   -webkit-text-stroke-width: 2px;\n   -webkit-text-stroke-color: #01FF70;\n   z-index: 15\n`\n\nconst Overlay = styled.div`\n  mix-blend-mode: overlay;\n`;\n\nconst PerspectiveOuter = styled.div`\n  perspective: 75px;\n`;\n\nconst PerspectiveInner= styled.div`\n  transform: rotateX(45deg);\n`;\n\nclass Logo extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount() {\n\n  }\n\n  render() {\n    return (\n        <StyledLogo>\n          <Tilt className=\"Tilt\" options={{ scale : 1.5, reset : false }} >\n            <div className=\"Tilt-inner\">\n              \n                <PerspectiveOuter>\n                  <PosedLogo>\n                    <TitleWrapper>\n                      <TitleStroke>nazuk</TitleStroke>\n                    </TitleWrapper>\n                  </PosedLogo>\n                </PerspectiveOuter>\n              \n            </div>\n          </Tilt>\n        </StyledLogo>\n    );\n  }\n}\n\nexport default Logo\n","import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport posed from 'react-pose';\nimport { getUnsplashImage } from '../../helpers';\n\nconst PosedSplashImage = posed.div({\n  hidden: {\n    opacity: 0,\n    y: 100\n  },\n  visible: {\n    opacity: 1,\n    y: 0\n  }\n});\n\nconst ImageWrapper = styled.div`\n    width: 500px;\n    position: relative;\n    z-index: 2;\n`;\n\nconst AspectRatio = styled.div`\n    width: 100%;\n    padding-bottom: 100%;\n    background-image: ${props => `url(${props.src})`};\n    background-size: cover;\n    background-position: 50% 50%;\n`;\n\nconst HiddenImage = styled.img`\n  height: 100px;\n  width: 100px;\n  position: absolute;\n  opacity: 0;\n`\n\nconst unsplashImg = getUnsplashImage();\n\nclass SplashImage extends Component {\n  constructor(props) {\n      super(props);\n\n      this.state = {\n          loaded: false,\n      }\n  }\n\n  handleOnLoad(event) {\n    setTimeout(() => {\n      this.setState({ loaded: true });\n    }, 100);\n  }\n\n  render() {\n    return (\n      <PosedSplashImage>\n        <ImageWrapper>\n          <HiddenImage src={unsplashImg} onLoad={(event) => this.handleOnLoad(event)}></HiddenImage>\n          <AspectRatio src={unsplashImg}></AspectRatio>\n        </ImageWrapper>\n      </PosedSplashImage>\n    );\n  }\n}\n\nexport default SplashImage\n","export function getUnsplashImage() {\n\tlet users = ['trapnation','von_co','benblenner'];\n\treturn 'https://source.unsplash.com/user/' + users[Math.floor(Math.random() * users.length)];\n}","import React, { Component } from 'react';\nimport styled from 'styled-components'\nimport posed from 'react-pose';\nimport Waypoint from \"react-waypoint\";\n\nconst PosedStory = posed.div({\n  hidden: {\n    opacity: 0,\n    y: 20,\n  },\n  visible: {\n    opacity: 1,\n    y: 0,\n    transition: { delay: 100, duration: 600}\n  }\n});\n\nconst Title =  styled.div`\n  font-size: 24px;\n  font-family: 'Noto Sanss JP', sans-serif;\n  font-weight: 500;\n  border: 2px solid black;\n  padding: 5px 10px;\n  display: inline-block;\n  text-transform: uppercase;\n`;\n\nconst Description =  styled.div`\n  margin-top: 10px;\n  font-size: 16px;\n  font-family: 'Noto Sanss JP', sans-serif;\n  font-weight: 300;\n  display: block;\n  text-transform: uppercase;\n`;\n\nconst ImageWrapper = styled.div`\n  padding-top: 110%;\n  background: black;\n  position: relative;\n`;\n\nconst Image = styled.div`\n  position: absolute;\n  height: 100%;\n  width: 100%;\n  left: 0;\n  top: 0;\n`;\n\nconst StoryWrapper = styled.div`\n  margin-bottom: 150px;\n`;\n\nclass Story extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      revealed: false\n    }\n  }\n\n  reveal() {\n    this.setState({ revealed: true });\n  }\n\n  render() {\n    return (\n      <Waypoint onEnter={() => this.reveal()}>\n        <PosedStory pose={this.state.revealed ? 'visible' : 'hidden'}>\n          <StoryWrapper>\n            <ImageWrapper><Image></Image></ImageWrapper>\n          </StoryWrapper>\n          {/* <Title>{this.props.children}</Title>\n          <Description>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Proin in nisi erat. Nullam vitae enim vel est volutpat sodales tincidunt tristique elit. Orci varius natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Fusce lobortis commodo eleifend. Nam quis orci ligula. Cras id viverra arcu, ut consectetur metus. Suspendisse vel fermentum.</Description> */}\n        </PosedStory>\n      </Waypoint>\n    );\n  }\n}\n\nexport default Story;","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport styled from 'styled-components';\nimport posed from 'react-pose';\n\nimport NavigationLink from './components/NavigationLink/NavigationLink';\nimport Logo from './components/Logo/Logo';\nimport SplashImage from './components/SplashImage/SplashImage';\nimport Story from './components/Story/Story';\n\nconst PosedWrapper = posed.div({\n  visible: {\n    delayChildren: 1000,\n    staggerChildren: 1000\n  },\n  hidden: { },\n});\n\nconst Scene1 = styled.div`\n  min-height: 100vh;\n  width: 100vw;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst MenuWrapper = styled.div`\n  position: fixed;\n  top: 50%;\n  transform: translateY(-50%);\n  left: 50px;\n  z-index: 10;\n`;\n\nconst PosedMenuWrapper = posed.div({\n  visible: {\n    delayChildren: 1000,\n    staggerChildren: 50\n  },\n  hidden: {},\n});\n\nconst Container = styled.div`\n  width: 75vw;\n  margin: 0 auto;\n`;\n\nconst Scene2 = styled.div`\n  padding: 0;\n  min-height: 100vh;\n  width: 100vw;\n`;\n\nconst ColContainer = styled.div`\n  display: flex;\n`;\n\nconst ColLeft = styled.div`\n  width: 50%;\n`;\n\nconst ColRight = styled.div`\n  width: 50%;\n  margin-left: 150px;\n  margin-top: 250px;\n`;\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      loaded: false\n    }\n  }\n\n  componentDidMount() {\n    this.setState({ loaded: true })\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Scene1>\n          <PosedWrapper pose={this.state.loaded ? 'visible' : 'hidden'}>\n            <Logo></Logo>\n            <div>[ homepage content here ]</div>\n          </PosedWrapper>\n        </Scene1>\n        <Scene2>\n          <Container>\n            <ColContainer>\n              <ColLeft>\n                <Story></Story>\n                <Story></Story>\n                <Story></Story>\n              </ColLeft>\n              <ColRight>\n                <Story></Story>\n                <Story></Story>\n                <Story></Story>\n              </ColRight>\n            </ColContainer>\n          </Container>\n        </Scene2>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}